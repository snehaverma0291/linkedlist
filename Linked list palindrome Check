#include<iostream>
using namespace std;


//program to check linkedlist is palindrome
#include<iostream>
#include<complex>
#include<stack>
#include<queue>
using namespace std;

struct node 
{ 
	int data; 
  struct node *next; 
};

int palindrome(struct node *head) 
{
	   stack<int>st;
	   queue<int>qu;
	   int flag=0;
	   
	   struct node *tmp = NULL;
	   struct node *head_new = NULL;
	 
	  /* Allocate memory */
	   tmp = (node*)malloc(sizeof(struct node));
	   head_new = (node*)malloc(sizeof(struct node));
	   tmp=head;
	    while(head!=NULL) 
	     {
	     	//cout<<head->data<<endl;
	     	st.push(head->data) ;
	     	qu.push(head->data);
	     	
	     	head = head->next;
	     
	     }
	     while(!st.empty()) 
	     {
	     	//cout<<st.top()<<" "<<qu.front() <<endl;
	     	if(st.top() == qu.front()) 
	     	{
	     		flag=1;	
	     	}
	     	else
	     	{
	     		flag =0;
	     	}
	     	st.pop();
	     	qu.pop();
	     	 
	     }
	     cout<<flag<<endl;
	     
	     
	    
	     
	  return flag;
}

int main()
{
	/* Initialize nodes */ 
		struct node *head=NULL; 
	 struct node *one = NULL;
	 struct node *two = NULL; 
	 struct node *three = NULL;
	 struct node *four = NULL;
	 struct node *five = NULL;
	 
	  /* Allocate memory */
	  one = (node*)malloc(sizeof(struct node));  
	  two =  (node*)malloc(sizeof(struct node));
	  three = (node*)malloc(sizeof(struct node));
	  four = (node*)malloc(sizeof(struct node));
	  five = (node*)malloc(sizeof(struct node));
	  
	  
	   /* Assign data values */
	    one->data = 1;
	    two->data = 2; 
	    three->data=3; 
	    four->data=2;
	    five->data=1;
	    
	    /* Connect nodes */
	     one->next = two; 
	     two->next = three;
	     three->next = four ; 
	     four->next = five;
	     /* Save address of first node in head */       
	       head = one;
	       
	       
	 struct node *itr = NULL;
	 
	  /* Allocate memory */
	  itr = (node*)malloc(sizeof(struct node));     
	         
	    struct node *reverse= NULL;
	 
	  /* Allocate memory */
	  reverse = (node*)malloc(sizeof(struct node));     
	   
	  palindrome(head) ;
	  /*
	  cout<<reverse->data<<endl;
	  cout<<reverse->next->data<<endl;
	  cout<<reverse->next->next->data<<endl;
	  cout<<reverse->next->next->next->data<<endl;
	  cout<<reverse->next->next->next->next->data<<endl;
	  itr=reverse;
	 
	  while(itr!=NULL) 
	  {
	  	cout<<itr->data<<endl;
	  	itr=itr->next;
	  }
	  */
	  	
	  	
	  
	  
	  //cout<<ans->next->data<<endl;
	   
	       
 
}

